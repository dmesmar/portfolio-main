# Workflow for deploying Next.js app from Nx monorepo to GitHub Pages
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next
      
      - name: Install dependencies
        run: npm ci
      
      - name: Find Next.js app in Nx workspace
        id: find-nextjs-app
        run: |
          # Look for Next.js app in apps directory - modify if you know the exact app name
          NEXTJS_APP=$(find apps -name "next.config.js" -type f -not -path "*/node_modules/*" | head -n 1 | xargs dirname | xargs basename)
          if [ -z "$NEXTJS_APP" ]; then
            echo "No Next.js app found in apps directory"
            exit 1
          fi
          echo "Found Next.js app: $NEXTJS_APP"
          echo "app_name=$NEXTJS_APP" >> $GITHUB_OUTPUT
      
      - name: Create Next.js config with basePath
        run: |
          APP_NAME=${{ steps.find-nextjs-app.outputs.app_name }}
          CONFIG_PATH="apps/$APP_NAME/next.config.js"
          
          # Backup original config
          cp $CONFIG_PATH ${CONFIG_PATH}.bak
          
          # Add or update basePath and output settings
          cat > $CONFIG_PATH << EOF
          // next.config.js
          const nextConfig = {
            output: 'export',
            basePath: '/portfolio-main',
            images: {
              unoptimized: true,
            },
            // Merge with existing config if needed
            ...(require('./${CONFIG_PATH}.bak')),
          };
          
          module.exports = nextConfig;
          EOF
      
      - name: Build with Nx
        run: |
          APP_NAME=${{ steps.find-nextjs-app.outputs.app_name }}
          npx nx build $APP_NAME --prod
      
      - name: Determine output directory
        id: output-dir
        run: |
          APP_NAME=${{ steps.find-nextjs-app.outputs.app_name }}
          # Check standard Nx output location
          if [ -d "dist/apps/$APP_NAME" ]; then
            echo "dir=dist/apps/$APP_NAME" >> $GITHUB_OUTPUT
          # Check Next.js standard output location
          elif [ -d "apps/$APP_NAME/out" ]; then
            echo "dir=apps/$APP_NAME/out" >> $GITHUB_OUTPUT
          else
            echo "Could not find build output directory"
            exit 1
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.output-dir.outputs.dir }}

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
